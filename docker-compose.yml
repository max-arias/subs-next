version: "3.7"

services:
  cms:
    image: strapi/strapi
    container_name: cms
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    networks:
      - subtitles-network
    volumes:
      - ./cms:/srv/app/
    ports:
      - 1337:1337

  db:
    image: postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    container_name: db
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - ./db-data:/var/lib/postgresql/data/
    networks:
      - subtitles-network
  
  frontend:
    image: node
    container_name: frontend
    networks:
      - subtitles-network
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/srv/app/
    restart: unless-stopped
    working_dir: /srv/app/
    entrypoint: "/bin/bash"
    command: "-c \"if [ ! -d \"node_modules\" ]; then npm i; fi; npm run dev\""

networks:
  subtitles-network:
    driver: bridge

volumes:
  db-data:
